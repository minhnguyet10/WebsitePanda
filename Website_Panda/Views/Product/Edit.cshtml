@model Website_Panda.Models.Product

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
    <style>

        textarea {
            width: 100%;
            border-radius: 4px;
            border: 1px solid #ccc;
        }
    </style>
<h2>Edit</h2>


@using (Html.BeginForm("Edit", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.IDProduct)

    <div class="form-group">
        <label class="control-label col-md-2"> Product Name</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10" style="border-radius: 4px;width:100%">
            @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Information, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Information, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Information, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row">
        <div class="col-lg-4">
            <div class="form-group">
                @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-9">
                    <img src="~/Images/@Model.Image" style="height: 200px; width:200px;" id="previewImage" />
                    <input type="file" name="Image" onchange="ShowImagePreview(this, document.getElementById('previewImage'))" />
                    @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-lg-4">
            <div class="form-group">
                <label class="control-label col-md-3"> Image 2</label>
                @*@Html.LabelFor(model => model.MoreImage1, htmlAttributes: new { @class = "control-label col-md-3" })*@
                <div class="col-md-9">
                    <img src="~/Images/@Model.MoreImage1" style="height: 200px; width:200px;" id="previewImage1" alt="Không có ảnh để hiển thị" />
                    <input type="file" name="MoreImage1" onchange="ShowImagePreview(this, document.getElementById('previewImage1'))" />
                    @Html.ValidationMessageFor(model => model.MoreImage1, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-lg-4">
            <div class="form-group">
                <label class="control-label col-md-3"> Image 2</label>
                @*@Html.LabelFor(model => model.MoreImage2, htmlAttributes: new { @class = "control-label col-md-3" })*@
                <div class="col-md-9">
                    <img src="~/Images/@Model.MoreImage2" style="height: 200px; width:200px;" id="previewImage2" alt="Không có ảnh để hiển thị" />
                    <input type="file" name="MoreImage2" onchange="ShowImagePreview(this, document.getElementById('previewImage2'))" />
                    @Html.ValidationMessageFor(model => model.MoreImage2, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2"> Promotion Price</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.PromotionPrice, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PromotionPrice, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Color, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Color, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Color, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2"> Category</label>
        @*@Html.LabelFor(model => model.CategoryID, "CategoryID", htmlAttributes: new { @class = "control-label col-md-2" })*@
        <div class="col-md-10">
            @Html.DropDownList("CategoryID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2"> Brand</label>
        @*@Html.LabelFor(model => model.BrandID, "BrandID", htmlAttributes: new { @class = "control-label col-md-2" })*@
        <div class="col-md-10">
            @Html.DropDownList("BrandID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.BrandID, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
